/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package net.xabc.oo.hr.web.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.xabc.oo.hr.biz.DataDetaiBiz;
import net.xabc.oo.hr.biz.EmployeeBiz;
import net.xabc.oo.hr.biz.PositionBiz;
import net.xabc.oo.hr.biz.SalaryGrantBiz;
import net.xabc.oo.hr.biz.SalaryStandardBiz;
import net.xabc.oo.hr.common.SelectOptions;
import net.xabc.oo.hr.entity.Salarygrant;
import net.xabc.oo.hr.entity.Salarystandard;
import net.xabc.oo.hr.utils.date.DateFormat;
import net.xabc.oo.hr.web.form.SalaryStandardForm;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

/**
 * MyEclipse Struts Creation date: 12-16-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class SalaryStandardAction extends DispatchAction {

	private SalaryStandardBiz sstandBiz;

	private SelectOptions selectOptions;
	
	private SalaryGrantBiz salaryGrantBiz;
	
	private DataDetaiBiz dataDetaiBiz;
	
	private PositionBiz positionBiz;
	
	private EmployeeBiz employeeBiz;

	

	/***************************************************************************
	 * 查询薪酬标准
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward selectStandardList(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		String forward = "";
		try {
			String page = request.getParameter("page");
			int curPage = 1;
			List list = null;
			if (page != null) {
				curPage = Integer.parseInt(page);
				list = sstandBiz.selectAll(curPage, 8);
			} else {
				list = sstandBiz.selectAll(1, 8);
			}
			int totalPage = sstandBiz.getSelectAllPage(8, 1);
			request.setAttribute("totalPage", totalPage);
			request.setAttribute("curPage", curPage);
			request.setAttribute("list", list);
			forward = "salaryStandardList";
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}
	
	
	/**
	 * 查询薪资发放发放的集合列表
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward getsalaryGrantRegister(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			String page = request.getParameter("page");
			int curPage = 1;
			List list = null;
			if (page != null) {
				curPage = Integer.parseInt(page);
				list = employeeBiz.selectEmployee(curPage, 10);
			} else {
				list = employeeBiz.selectEmployee(1, 10);
			}
			int totalPage = employeeBiz.getTotalPage(10);
			request.setAttribute("totalPage", totalPage);
			request.setAttribute("curPage", curPage);
			request.setAttribute("salaryGrantList", list);
			forward = "salaryGrantRegister";
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}
	
	
	/**
	 * 删除薪酬标准
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward deleteSstand(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			String ssid = request.getParameter("ssId");
			if (ssid != null) {
				boolean bool=salaryGrantBiz.checkSalaryStardIdExists(Integer.parseInt(ssid));
				if(bool==true){
					int num=salaryGrantBiz.deleteSalaryGrantBySsId(Integer.parseInt(ssid));
				}
				Salarystandard salaryStandard = new Salarystandard();
				salaryStandard.setSsId(Integer.parseInt(ssid));
				int count = sstandBiz.delete(salaryStandard);
				if (count > 0) {
					selectStandardList(mapping, form, request, response);
				}
			}
			forward = "salaryStandardList";
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}

	/**
	 * 添加薪酬标准
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			SalaryStandardForm salaryStandardForm =(SalaryStandardForm)form;
			boolean bool=sstandBiz.checkPositionIdExists(salaryStandardForm.getEmployeePositionId());
			int count=0;
			if(bool){
				int ssId=sstandBiz.getSsIdByPositionId(salaryStandardForm.getEmployeePositionId());
				if(ssId>0){
					salaryStandardForm.setSalaryStandardId(ssId);
					 count=sstandBiz.updateStandard(salaryStandardForm);
				}
			}else{
				   count= sstandBiz.addSstand(salaryStandardForm);
			}
			if(count>0){
				forward="auditing";
			}
		} catch (RuntimeException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}

	/**
	 * 根据ByssCheckStatus查找salaryAudtingList
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward selectStandByssCheckStatus(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response){
		String forward="";
		try {
			String page = request.getParameter("page");
			int curPage = 1;
			List list = null;
			if (page != null) {
				curPage = Integer.parseInt(page);
				list = sstandBiz.selectStandByssCheckStatus(0, curPage, 3);
			} else {
				list = sstandBiz.selectStandByssCheckStatus(0, 1, 3);
			}
			int totalPage = sstandBiz.getSelectAllPage(3, 0);
			request.setAttribute("totalPage", totalPage);
			request.setAttribute("curPage", curPage);
			request.setAttribute("list", list);
			forward="salaryAudtingList";
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);

	}
	  
	/**************************************************
	 *根据薪酬标准编号查询薪酬审核的详细信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward getAuditingDetailByssId(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response){
		String forward = "";
		try {
			String ssId=request.getParameter("standardId");
			if(ssId!=null){
				Salarystandard salaryStandard=sstandBiz.getSalaryStandardBySsId(Integer.parseInt(ssId));
				request.setAttribute("salaryStandard", salaryStandard);
				String date=DateFormat.getDate();
				request.setAttribute("date", date);
			}
			forward="standardAuditingDetail";
		} catch (RuntimeException e){
			e.printStackTrace();
		}
		return mapping.findForward(forward);
		
	}
	
	/**
	 * 根据编号id查找薪酬标准详细信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward getStandardById(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			String ssId=request.getParameter("ssId");
			if(ssId!=null){
				Salarystandard salaryStandard=sstandBiz.getSalaryStandardBySsId(Integer.parseInt(ssId));
				request.setAttribute("salaryStandard", salaryStandard);
				String date=DateFormat.getDate();
				request.setAttribute("date", date);
			}
			forward="updateSalaryStandard";
		} catch (RuntimeException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}
	
	
	/**
	 * 当点击通过的时候将值传入到薪酬标准管理页面中
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward getsalaryDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			String ssId=request.getParameter("ssId");
			if(ssId!=null){
				Salarystandard salaryStandard=sstandBiz.getSalaryStandardBySsId(Integer.parseInt(ssId));
				request.setAttribute("salaryStandard", salaryStandard);
			}
			forward="success";
		} catch (RuntimeException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}
	

	/**
	 * 根据EmployeeID查找员工档案信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param resonse
	 * @return
	 */
	public ActionForward getEmployeeSalaryInfoById(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse resonse) {
		String forward = "";
		String sgId = request.getParameter("sgId");
		if(sgId !=null){
			Salarygrant salaryGrant=salaryGrantBiz.getSalaryGrantById(Integer.parseInt(sgId));
			request.setAttribute("salaryGrant",salaryGrant);
			forward="salarySelectAcdtingInfo";
		}
		return mapping.findForward(forward);
	}
	
	
	/***********************************************************
	 * 更新薪酬标准
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			String ssId=request.getParameter("salaryStandardId");
			if(ssId!=null){
				SalaryStandardForm salaryStandardForm =(SalaryStandardForm)form;
				int count=sstandBiz.updateStandardRe(salaryStandardForm);
			
				if(count>0){
					forward="auditing";
				}
			}
		} catch (RuntimeException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}
	
	/**
	 * 薪酬标准审核
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward check(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			String ssId=request.getParameter("salaryStandardId");
			if(ssId!=null){
				SalaryStandardForm salaryStandardForm =(SalaryStandardForm)form;
				int count=sstandBiz.updateSalaryStandard(salaryStandardForm);
				if(count>0){
					forward="success";
				}
			}
		} catch (RuntimeException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}
	
	public ActionForward grantDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		
		return mapping.findForward(forward);
	}
	
	
	
	
	
	public SalaryStandardBiz getSstandBiz() {
		return sstandBiz;
	}

	public void setSstandBiz(SalaryStandardBiz sstandBiz) {
		this.sstandBiz = sstandBiz;
	}

	public SelectOptions getSelectOptions() {
		return selectOptions;
	}

	public void setSelectOptions(SelectOptions selectOptions) {
		this.selectOptions = selectOptions;
	}


	public SalaryGrantBiz getSalaryGrantBiz() {
		return salaryGrantBiz;
	}


	public void setSalaryGrantBiz(SalaryGrantBiz salaryGrantBiz) {
		this.salaryGrantBiz = salaryGrantBiz;
	}


	public DataDetaiBiz getDataDetaiBiz() {
		return dataDetaiBiz;
	}


	public void setDataDetaiBiz(DataDetaiBiz dataDetaiBiz) {
		this.dataDetaiBiz = dataDetaiBiz;
	}


	public PositionBiz getPositionBiz() {
		return positionBiz;
	}


	public void setPositionBiz(PositionBiz positionBiz) {
		this.positionBiz = positionBiz;
	}


	public EmployeeBiz getEmployeeBiz() {
		return employeeBiz;
	}


	public void setEmployeeBiz(EmployeeBiz employeeBiz) {
		this.employeeBiz = employeeBiz;
	}
}