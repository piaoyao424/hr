/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package net.xabc.oo.hr.web.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.xabc.oo.hr.biz.PositionBiz;
import net.xabc.oo.hr.entity.Postion;
import net.xabc.oo.hr.web.form.PositionForm;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

/**
 * MyEclipse Struts Creation date: 12-19-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class PositionAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	private PositionBiz postionBiz;

	/**
	 * 添加部门职位
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward addRole(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			PositionForm positionForm = (PositionForm) form;
			String branchId = request.getParameter("branchId");
			if (branchId != null) {
				positionForm.setBranchId(Integer.parseInt(branchId));
			}
			int count = postionBiz.addPosition(positionForm);
			if (count > 0) {
				selectBranchById(mapping, form, request, response);
				forward = "selectRole";
			}
		} catch (RuntimeException e) {
			e.printStackTrace();
			forward = "error";
		}
		return mapping.findForward(forward);
	}

	/**
	 * 根据BranchId查找部门名字
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward getBranchNmaeByBranchId(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		String forward = "";
		try {
			String branchId = request.getParameter("branchId");
			if (branchId != null) {
				String branchName = postionBiz.getBranchNmaeByBranchId(Integer
						.parseInt(branchId));
				request.setAttribute("branchName", branchName);
				request.setAttribute("branchId", branchId);
			}
			forward = "addRole";
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forward);
	}

	/**
	 * 根据部门Id查找对应的部门职位信息
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward selectBranchById(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		String forword = "";
		try {
			String branchId = request.getParameter("branchId");
			if (branchId != null) {
				List list = postionBiz.getPositionByBranchId(Integer
						.parseInt(branchId));
				request.setAttribute("postionlist", list);
				request.setAttribute("branchId", branchId);
			}
			forword = "selectRole";
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forword);
	}

	/**
	 * 删除部门职位
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward deleteRole(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String forward = "";
		try {
			String positionId = request.getParameter("positionId");
			if (positionId != null) {
				Postion position = new Postion();
				position.setPositionId(Integer.parseInt(positionId));
				int count = postionBiz.delete(position);
				if (count > 0) {
					selectBranchById(mapping, form, request, response);
				}
			}
			forward = "selectRole";
		} catch (NumberFormatException e) {
			e.printStackTrace();
			forward = "error";
		}
		return mapping.findForward(forward);
	}

	/**
	 * 根据部门的Id查找部门的名称
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward selectBranchNameById(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		String forword = "";
		try {
			String branchId = request.getParameter("branchId");
			if (branchId != null) {
				List list = postionBiz.getPositionByBranchId(Integer
						.parseInt(branchId));
				if (list.size() > 0 && list != null) {
					request.setAttribute("postionlist", list);
					request.setAttribute("branchId", branchId);
				}
			}
			forword = "addRole";
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return mapping.findForward(forword);
	}

	public PositionBiz getPostionBiz() {
		return postionBiz;
	}

	public void setPostionBiz(PositionBiz postionBiz) {
		this.postionBiz = postionBiz;
	}
}